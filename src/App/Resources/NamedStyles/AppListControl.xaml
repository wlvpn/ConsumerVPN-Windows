<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:lex="http://wpflocalizeextension.codeplex.com"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:valueConverters="clr-namespace:WLVPN.ValueConverters">
    <valueConverters:ExtendendBooleanToVisibilityConverter x:Key="CollapsedIfTrueConverter"
                                                        IsHidden="False"
                                                        TriggerValue="True" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="metroGridCell"  TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
        <Setter Property="ToolTip" Value="{Binding Path}" />
    </Style>
    
    <Style x:Key="AppListControl" TargetType="Control">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8*" />
                            <RowDefinition Height="2*" />
                        </Grid.RowDefinitions>
                        <Label HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Content="{lex:Loc Key=NoAppAdded}"
                               Style="{DynamicResource HeaderLabel}"
                               Visibility="{Binding ShowList, Converter={StaticResource CollapsedIfTrueConverter}}" />
                        <DataGrid x:Name="dgDomains"
                               AutoGenerateColumns="False"
                               CanUserAddRows="True"
                               CanUserDeleteRows="True"
                               ItemsSource="{Binding Applications, Mode=TwoWay}"
                               Style="{DynamicResource MetroDataGrid}"
                               Visibility="{Binding ShowList, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Header="{lex:Loc Key=Application}" Binding="{Binding Name}"  IsReadOnly="True"  />
                                <DataGridTextColumn CellStyle="{StaticResource metroGridCell}" Width="2*" Header="{lex:Loc Key=Path}" Binding="{Binding Path}" IsReadOnly="True"  >
                                   
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Width="*" Header="" MaxWidth="80" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Margin="10,0"
                                                    HorizontalAlignment="Center" 
                                                    IsHitTestVisible="True"
                                                    cal:Action.TargetWithoutContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                    cal:Bind.Model="{Binding}"
                                                    cal:Message.Attach="[Event Click] = [Action DeleteApplication($dataContext)]"
                                                    CommandParameter="{Binding}"
                                                    Content="{lex:Loc Key=Delete}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Button x:Name="PickManually"
                                Margin="0,20,0,0"
                                Grid.Row="1"
                                Width="100"
                                Height="30"
                                HorizontalAlignment="Left"
                                cal:Message.Attach="[Event Click] = [Action PickManually()]"
                                Content="{lex:Loc Key=PickManually}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>